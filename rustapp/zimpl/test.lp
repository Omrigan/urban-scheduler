\ This file was automatically generated by Zimpl
\ set E_idx    := {1, 2};
\ set E[E_idx] := <1> {1, 2}, <2> {3, 4};
\ set P        := union <e_idx> in E_idx: E[e_idx];
\ set PP       := P*P;
\ param dist[PP]     := <1, 2> 1 default 100;
\ param P_from[P]    := <1> 1, <2> 1;
\ set EE_idx := { <i, j> in E_idx*E_idx with i < j };
\ var x [EE_idx] binary;
\ var u [EE_idx];
\ var y [P] binary;
\ var a [PP] binary;
\ minimize cost: sum <p1, p2> in PP: a[p1, p2] * dist[p1, p2];
\ subto aux: forall <i, j> in EE_idx do             forall <p1> in E[i] do forall <p2> in  E[j] do                 a[p1, p2] ==
\  x[i,j] * y[p1] * y[p2];
\ subto from: forall <i> in E_idx - {1} do    (sum <i, j> in EE_idx: x[i, j]) +    (sum <j, i> in EE_idx: x[j, i]) == 2;
\ subto event_happens: forall <i> in E_idx do     (sum <p> in E[i]: y[p]) == 1;
\Problem name: test.zimpl
Minimize
 cost:  +100 a#1#1 + a#1#2 +100 a#1#3 +100 a#1#4 +100 a#2#1 +100 a#2#2
  +100 a#2#3 +100 a#2#4 +100 a#3#1 +100 a#3#2 +100 a#3#3 +100 a#3#4
  +100 a#4#1 +100 a#4#2 +100 a#4#3 +100 a#4#4
Subject to
 aux_1:
 \  + a#1#3 -1 x#1#2 * y#1 * y#3 = 0
 aux_2:
 \  + a#1#4 -1 x#1#2 * y#1 * y#4 = 0
 aux_3:
 \  + a#2#3 -1 x#1#2 * y#2 * y#3 = 0
 aux_4:
 \  + a#2#4 -1 x#1#2 * y#2 * y#4 = 0
 from_1:
  + x#1#2 = 2
 event_happens_1:
  + y#2 + y#1 = 1
 event_happens_2:
  + y#4 + y#3 = 1
Bounds
 0 <= x#1#2 <= 1
 0 <= y#1 <= 1
 0 <= y#2 <= 1
 0 <= y#3 <= 1
 0 <= y#4 <= 1
 0 <= a#1#1 <= 1
 0 <= a#1#2 <= 1
 0 <= a#1#3 <= 1
 0 <= a#1#4 <= 1
 0 <= a#2#1 <= 1
 0 <= a#2#2 <= 1
 0 <= a#2#3 <= 1
 0 <= a#2#4 <= 1
 0 <= a#3#1 <= 1
 0 <= a#3#2 <= 1
 0 <= a#3#3 <= 1
 0 <= a#3#4 <= 1
 0 <= a#4#1 <= 1
 0 <= a#4#2 <= 1
 0 <= a#4#3 <= 1
 0 <= a#4#4 <= 1
General
 x#1#2
 y#1
 y#2
 y#3
 y#4
 a#1#1
 a#1#2
 a#1#3
 a#1#4
 a#2#1
 a#2#2
 a#2#3
 a#2#4
 a#3#1
 a#3#2
 a#3#3
 a#3#4
 a#4#1
 a#4#2
 a#4#3
 a#4#4
End
